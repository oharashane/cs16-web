version: '3.8'

services:
  go-webrtc-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cs16-webrtc-server
    environment:
      # Server configuration
      - PORT=8080
      - IP=${WEBRTC_HOST_IP:-auto}  # WebRTC ICE candidates IP
      
      # CS Server discovery (will scan 27000-27030)
      - CS_SERVER_HOST=${CS_SERVER_HOST:-127.0.0.1}
      
      # Optional: specific server list (comma-separated)
      # - SERVER_LIST=127.0.0.1:27015,127.0.0.1:27016,127.0.0.1:27017
      
      # Security
      - RELAY_ALLOWED_BACKENDS=127.0.0.0/8,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12
      
    ports:
      # Dashboard and API
      - "${WEB_SERVER_PORT:-8080}:8080"
      # WebRTC server ports for CS servers (dynamic range 8000-8030)
      - "8000-8030:8000-8030"
    
    # Use host networking for local development (simple and reliable)
    network_mode: "host"
    
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Mount client files for development (optional)
    volumes:
      - ./go-webrtc-server/client:/app/client:ro
      - ./go-webrtc-server/dashboard.html:/app/dashboard.html:ro

# Optional: Add logging configuration
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
