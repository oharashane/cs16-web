node_modules/
client/node_modules/
client/dist/

# Python
__pycache__/
*.pyc

# Docker env
*.env
.env.*

# Server content (large)
server/rehlds/maps/
server/rehlds/overviews/
server/rehlds/addons/**/logs/
server/rehlds/addons/**/data/
server/rehlds/addons/**/plugins/compiled/
client/assets/games/cs16.zip

# New clean architecture - large binary files
cs16-webrtc/services/cs16-server/maps/*.bsp
cs16-webrtc/services/cs16-server/overviews/
cs16-webrtc/services/cs16-server/addons/**/logs/
cs16-webrtc/services/cs16-server/addons/**/dlls/*.so
cs16-webrtc/services/cs16-server/addons/**/modules/*.so

# Old build artifacts (removed)
# client/ - removed (using yohimik-client)
# xash3d-fwgs/ - removed (using yohimik's stable engine)
# emsdk/ - removed (not building engine anymore)

# Editors
.vscode/
.idea/
.DS_Store
# Yohimik client large assets (old structure)
yohimik-client/valve.zip
yohimik-client/assets/*.wasm
yohimik-client/assets/*.so
yohimik-client/rwdir/

# Clean architecture - web client assets
cs16-webrtc/services/web-relay/web/client/valve.zip
cs16-webrtc/services/web-relay/web/client/assets/*.wasm
cs16-webrtc/services/web-relay/web/client/assets/*.so
cs16-webrtc/services/web-relay/web/client/rwdir/

# Research artifacts (cleaned up)
manual-webrtc-test.html
ws-mitm-proxy.py
yohimik-server.py
yohimik-node-server.js
yohimik-websocket-server.js
yohimik-original/

# Node.js (if needed for future development)
package*.json
go-webrtc-server/public/valve.zip
web-client/public/valve.zip

cs16-webrtc/services/web-relay/src/client-backup-20250814-1142/
cs16-webrtc/services/web-relay/web/client-backup-20250814-1142/
extracted-client/

